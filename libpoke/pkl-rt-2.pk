/* pkl-rt-2.pkl - Run-time library for the poke compiler.  */

/* Copyright (C) 2021, 2022 The poke authors.  */

/* This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* Any function that uses `format' cannot be used in `pkl-rt-1'.
   The reason why the problem is happening is that `format' is using
   `pkl_asm_call' to call `_pkl_reduce_string_array' and `pkl_asm_call'
   relies on the global environment in the compiler and at that time the
   on-going environment is not added yet.
   So we have to put functions that use `format' here, in `pkl-rt-2'.  */

/* Assertion function.

   The compiler transforms assert statement to invocation of this
   function.  COND is first argument of assert statement, and MSG is
   the optional second argument.  FILENAME is the name of source
   file.  LINE and COL are, respectively, line and column number
   of the assert statement in the source file.  */

fun _pkl_assert = (uint<64> cond, string msg, string filename,
                   uint<64> line, uint<64> col) void:
  {
    if (cond)
      return;

    raise Exception {
      code = EC_assert,
      name = "assertion failure",
      location = format ("%s:%u64d:%u64d:", filename, line, col),
      msg = msg,
      exit_status = 1,
    };
  }
