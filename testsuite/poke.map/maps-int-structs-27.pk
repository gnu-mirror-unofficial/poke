/* { dg-do run } */
/* { dg-data {c*} {0x10 0x20 0x30 0x40  0x50 0x60 0x70 0x80   0x90 0xa0 0xb0 0xc0} } */

type Bar =
  struct uint<32>
  {
    uint<16> a1;
    uint<16> a2;
  };

type Foo =
  struct
  {
    uint<16> a;
    Bar b;
    uint<8> c;
  };

fun t = (Foo foo, uint<16> old1, uint<16> new1,
         uint<16> old2, uint<16> new2) int<32>:
  {
    var i = 0;

    /* check current expected values */
    if (foo.b.a1 != old1)
      return ++i;
    if (foo.b.a2 != old2)
      return ++i;

    /* set new values */
    foo.b.a1 = new1;
    if (foo.b.a1 != new1)
      return ++i;
    foo.b.a2 = new2;
    if (foo.b.a2 != new2)
      return ++i;

    /* revert to old values */
    foo.b.a1 = old1;
    if (foo.b.a1 != old1)
      return ++i;
    foo.b.a2 = old2;
    if (foo.b.a2 != old2)
      return ++i;

    return 0;
  }

/* { dg-command { .set endian little } } */
/* { dg-command { .set obase 16} } */
/* { dg-command { t (Foo @ 0#B, 0x6050UH, 0xaabbUH, 0x4030UH, 0xccddUH); } } */
/* { dg-output {0x0\n} } */
/* { dg-command { Foo @ 0#B } } */
/* { dg-output {Foo {a=0x2010UH,b=Bar {a1=0x6050UH,a2=0x4030UH},c=0x70UB}\n} } */
