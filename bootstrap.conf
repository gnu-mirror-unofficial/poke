# Bootstrap configuration.

# Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
# 2015, 2016, 2017, 2018, 2019, 2020, 2021 Free Software Foundation,
# Inc.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# gnulib modules used for this project.
gnulib_modules="
  accept
  array-list
  basename-lgpl
  bind
  byteswap
  findprog
  fstat
  gendocs
  gethostname
  getline
  getopt-gnu
  glob
  host-cpu-c-abi
  isatty
  libtextstyle-optional
  maintainer-makefile
  mkstemp
  parse-datetime
  pmccabe2html
  printf-posix
  progname
  pthread
  readline
  socket
  stdarg
  stdbool
  strchrnul
  streq
  tmpdir
  unlink
  update-copyright
  xalloc
  xstrndup
  strstr
  opendir
  closedir
  readdir
  memcpy
  read-file
  "

# gnulib modules used in libpoke/.
libpoke_modules="
  basename-lgpl
  byteswap
  fopen-gnu
  free-posix
  fstat
  gcd
  gettext-h
  gettime
  intprops
  isatty
  mkstemp
  printf-posix
  random
  secure_getenv
  snprintf
  stdarg
  stdbool
  stddef
  strchrnul
  streq
  string-buffer
  strndup
  strtoull
  signal-h
  tempname
  timespec
  tmpdir
  vasprintf-posix
  xalloc
  strstr
  lib-symbol-visibility
  "

# gnulib modules used in gui/
gui_modules="
  alloca
  getopt-gnu
  gettext-h
  "

# Don't overwrite the INSTALL file.
gnulib_extra_files="
        build-aux/install-sh
        build-aux/mdate-sh
        build-aux/texinfo.tex
        build-aux/depcomp
        build-aux/config.guess
        build-aux/config.sub
"

# TODO: Remove this after the 1.0 release. Until then, this helps developers
# not have to type --skip-po on every bootstrap call
SKIP_PO=t

# gnulib library directory
source_base=gl

# gnulib library name
gnulib_name=libgnu

# Support for additional gnulib-tool invocations
# (keep this consistent with ACLOCAL_AMFLAGS in Makefile.am)
ACLOCAL_FLAGS='-I m4/libpoke -I m4/gui'

checkout_only_file=

# Additional xgettext options to use.  Use "\\\newline" to break lines.
XGETTEXT_OPTIONS=$XGETTEXT_OPTIONS'\\\
 --from-code=UTF-8\\\
 --flag=asprintf:2:c-format --flag=vasprintf:2:c-format\\\
 --flag=asnprintf:3:c-format --flag=vasnprintf:3:c-format\\\
 --flag=wrapf:1:c-format\\\
 --flag=error:3:c-format --flag=error_at_line:5:c-format\\\
'

# If "AM_GNU_GETTEXT(external" or "AM_GNU_GETTEXT([external]"
# appears in configure.ac, exclude some unnecessary files.
# Without grep's -E option (not portable enough, pre-configure),
# the following test is ugly.  Also, this depends on the existence
# of configure.ac, not the obsolescent-named configure.in.  But if
# you're using this infrastructure, you should care about such things.

gettext_external=0
grep '^[	 ]*AM_GNU_GETTEXT(external\>' configure.ac > /dev/null &&
  gettext_external=1
grep '^[	 ]*AM_GNU_GETTEXT(\[external\]' configure.ac > /dev/null &&
  gettext_external=1

if test $gettext_external = 1; then
  # Gettext supplies these files, but we don't need them since
  # we don't have an intl subdirectory.
  excluded_files='
      m4/glibc2.m4
      m4/intdiv0.m4
      m4/lcmessage.m4
      m4/lock.m4
      m4/printf-posix.m4
      m4/size_max.m4
      m4/uintmax_t.m4
      m4/ulonglong.m4
      m4/visibility.m4
      m4/xsize.m4
  '
fi

# Build prerequisites
buildreq="\
autoconf    2.62
automake    1.16
flex        2.5.37
bison       3.6
gettext     0.18.2
pkg-config  -
makeinfo    6.0
"

# Process our own command-line options

bootstrap_option_hook ()
{
  option=$1
  case $option in
  --jitter-srcdir=*)
  JITTER_SRCDIR=${option#--jitter-srcdir=}; return 0;;
  esac

  return 1;
}

bootstrap_print_option_usage_hook ()
{
  cat <<EOF
 --jitter-srcdir=DIRNAME  specify the local directory where jitter
                          sources reside.  Use this if you already
                          have jitter sources on your machine, and
                          do not want to waste your bandwidth downloading
                          them again.
EOF
}

# We have to import Jitter early on, *before* running autoconf on Poke, since
# Poke's configure.ac requires the Autoconf macros to be copied from Jitter.
bootstrap_post_import_hook ()
{
  $use_git || test -d "$JITTER_SRCDIR" \
    || die "Error: --no-git requires --jitter-srcdir"

  # create INSTALL.generic file
  ${GNULIB_SRCDIR}/gnulib-tool --copy-file doc/INSTALL INSTALL.generic

  # create gl-libpoke
  ${GNULIB_SRCDIR}/gnulib-tool --import --lib=libgnu --source-base=gl-libpoke --m4-base=m4/libpoke --doc-base=doc --aux-dir=build-aux --no-conditional-dependencies --libtool --without-tests --macro-prefix=libpoke ${libpoke_modules}

  # create gl-gui
  ${GNULIB_SRCDIR}/gnulib-tool --import --lib=libgnu --source-base=gl-gui --m4-base=m4/gui --doc-base=doc --aux-dir=build-aux --no-conditional-dependencies --libtool --without-tests --macro-prefix=gui ${gui_modules}

  if $use_git && test -d .git && check_exists git; then
    echo 'Updating the Jitter submodule'
    git submodule update --init -- ./jitter
    JITTER_SRCDIR=jitter
  fi

  echo 'Bootstrapping Jitter'
  (
    cd $JITTER_SRCDIR
    ./bootstrap --gnulib-srcdir=../gnulib --no-git
  ) || exit $?

  echo 'Importing Autoconf macros from Jitter...'
  cp $JITTER_SRCDIR/autoconf/jitter.m4 m4/

  # Copy pkg-config's pkg.m4 so that our downstream users don't need to.
  local ac_dir=`aclocal --print-ac-dir`
  test -s "$ac_dir/dirlist" && ac_dir=$ac_dir:`tr '\n' : < "$ac_dir/dirlist"`
  oIFS=$IFS
  IFS=:
  for dir in \
    $ACLOCAL_PATH $ac_dir /usr/share/aclocal ''
  do
    IFS=$oIFS
    if test -n "$dir" && test -r "$dir/pkg.m4"; then
      cp "$dir/pkg.m4" m4/pkg.m4
      return
    fi
  done
  IFS=$oIFS
  die 'Cannot find pkg.m4; perhaps you need to install pkg-config'

  # Set up saner diff order
  if ! (git config --get diff.orderFile) >/dev/null 2>&1; then
     git config diff.orderFile etc/git.orderfile
  fi
}
